<div
  x-data="{ letters: [] }"
  x-on:keydown.window="handleKeyPress"
  class="h-[calc(100vh-10rem)] flex flex-col justify-between"
>
  <div id="guesses" class="flex justify-center">
    <div class="mb-8">
      <%= for row <- @game.board_state do %>
        <%= inspect(row) %>
        <div class="flex my-2 gap-2 text-center text-xl font-bold justify-center">
          <%= for letter <- row do %>
            <%= inspect(letter) %>
            <div class={get_letter_class(letter)}>
              <%= elem(letter, 1) %>
            </div>
          <% end %>
        </div>
      <% end %>
      <div class="flex my-2 gap-2 text-center text-xl font-bold justify-center">
        <template x-for={"letter in #{@letters_per_word}"}>
          <div
            class="border-2 border-gray-200 rounded-md p-4 w-14 h-14 uppercase"
            x-text="letters[letter - 1]"
          />
        </template>
      </div>
      <%= for _ <- 1..(@allowed_guesses - length(@game.board_state) - 1) do %>
        <div class="flex my-2 gap-2 text-center text-xl font-bold justify-center">
          <template x-for={"letter in #{@letters_per_word}"}>
            <div class="border-2 border-gray-200 rounded-md p-4 w-14 h-14 uppercase" />
          </template>
        </div>
      <% end %>
    </div>
  </div>
  <%= if @game.game_status == :lose do %>
    <div>
      <p class="text-center">Oof ðŸ˜¬</p>
      <p class="text-center">
        The word was <span class="text-green-600"><%= @game.solution %></span>
      </p>
    </div>
  <% end %>
  <%= if @game.game_status == :win or @game.game_status == :lose do %>
    <div class="pb-4">
      <p class="text-center">Rate the word</p>
      <div class="text-center">
        <button phx-click="rate_good" class="px-4 py-2 rounded-md text-white bg-green-600">
          Good
        </button>
        <button phx-click="rate_bad" class="px-4 py-2 rounded-md text-white bg-red-600">
          Bad
        </button>
      </div>
    </div>
  <% end %>
  <%= if assigns[:error] do %>
    <div class="pb-4">
      <p class="text-center pb-4"><%= @error %></p>
      <div class="text-center">
        <button phx-click="add_word" class="px-4 py-2 rounded-md text-white bg-purple-600">
          Add
        </button>
      </div>
    </div>
  <% end %>
  <div id="keyboard" class="flex justify-center">
    <div class="flex-grow max-w-2xl">
      <%= for row <- @keyboard_rows do %>
        <div class="flex justify-center">
          <%= for key <- row do %>
            <%= if key == "Enter" do %>
              <button
                id="enter-key"
                x-on:click="$dispatch('enter-click', { word: letters.join('') })"
                phx-hook="SubmitGuess" 
                class={get_key_class(@game, "Enter")}
              >
                <span class="w-full text-center">Enter</span>
              </button>
            <% else %>
              <button x-on:click="handleButtonPress" class={get_key_class(@game, key)}>
                <span class="w-full text-center"><%= key %></span>
              </button>
            <% end %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  function handleEnter(letters) {
    if (letters.length === 5) {
      console.log('submit');
    }
  }

  function handleBackspace(letters) {
    letters.pop();
  }

  function handleLetter(letters, key) {
    if (letters.length < 5 && (key.code === 'button' || (key.code >= 65 && key.code <= 90))) {
      letters.push(key.name);
    }
  }

  function stateReducer(letters, key) {
    switch (key.name) {
      case 'Backspace':
        return handleBackspace(letters);
      case 'Enter':
        return handleEnter(letters);
      default:
        return handleLetter(letters, key)
    }
  }

  function handleButtonPress(event) {
    return stateReducer(this.letters, { name: event.target.textContent, code: 'button' });
  }

  function handleKeyPress(event) {
    return stateReducer(this.letters, { name: event.key, code: event.keyCode });
  }
</script>
